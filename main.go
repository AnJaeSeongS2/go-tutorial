package main

import (
	"github.com/anlue/go/tutorial/concurrency"
)

func main() {
	// basics.TourPackage()
	// basics.TourImports()
	// basics.TourExportedNames()
	// basics.TourFunctions()
	// basics.TourFunctionsContinued()
	// basics.TourMultipleResults()
	// basics.TourNamedResults()
	// basics.TourVariables()
	// basics.TourVariablesWithInitializers()
	// basics.TourShortVariableDeclarations()
	// basics.TourBasicTypes()
	// basics.TourZero()
	// basics.TourTypeConversions()
	// basics.TourTypeInference()
	// basics.TourConstants()
	// basics.TourNumericConstants()

	// flowcontrol.TourFor()
	// flowcontrol.TourIf()
	// flowcontrol.TourIfWithAShortStatement()
	// flowcontrol.TourSwitch()
	// flowcontrol.TourDefer()

	// moretypes.TourPointers()
	// moretypes.TourStruct()
	// moretypes.TourArray()
	// moretypes.TourSlices()
	// moretypes.TourSliceLenCap()
	// moretypes.TourSliceNil()
	// moretypes.TourMakingSlices()
	// moretypes.TourSlicesOfSlice()
	// moretypes.TourSliceAppend()
	// moretypes.TourRange()
	// moretypes.TourRangeContinued()
	// moretypes.TourExerciseSlices()
	// moretypes.TourMaps()
	// moretypes.TourMutatingMaps()
	// moretypes.TourExerciseMaps()
	// moretypes.TourFunctionValues()
	// moretypes.TourFunctionClosures()
	// moretypes.TourExerciseFibonacciClosure()

	// methods.TourMethods()
	// methods.TourMethodsFuncs()
	// methods.TourMethodsContinued()
	// methods.TourMethodsPointers()
	// methods.TourInterfaces()
	// methods.TourInterfacesAreSatisfiedImplicitly()
	// methods.TourInterfaceValues()
	// methods.TourInterfaceValuesWithNil()
	// methods.TourEmptyInterface()
	// methods.TourTypeAssertions()
	// methods.TourTypeSwitches()
	// methods.TourStringer()
	// methods.TourExerciseStringer()
	// methods.TourErrors()
	// methods.TourExerciseErrors()
	// methods.TourReader()
	// methods.TourExerciseReader()

	// concurrency.TourGoroutines()
	// concurrency.TourChannels()
	// concurrency.TourBufferedChannels()
	// concurrency.TourRangeAndClose()
	// concurrency.TourSelect()
	// concurrency.TourDefaultSelection()
	concurrency.TourMutexCounter()
}
